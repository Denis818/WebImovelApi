// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebImovelApi.Context;

#nullable disable

namespace WebImovelApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220527120641_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebImovelApi.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("ImovelId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebImovelApi.Entities.Imovel", b =>
                {
                    b.Property<int>("ImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("LocadorId")
                        .HasColumnType("int");

                    b.Property<double>("ValorDiaria")
                        .HasColumnType("double");

                    b.HasKey("ImovelId");

                    b.HasIndex("LocadorId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("WebImovelApi.Entities.Locador", b =>
                {
                    b.Property<int>("LocadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Telefone")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.HasKey("LocadorId");

                    b.ToTable("Locadores");
                });

            modelBuilder.Entity("WebImovelApi.Entities.Cliente", b =>
                {
                    b.HasOne("WebImovelApi.Entities.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("WebImovelApi.Entities.Imovel", b =>
                {
                    b.HasOne("WebImovelApi.Entities.Locador", "Locador")
                        .WithMany("Imovels")
                        .HasForeignKey("LocadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locador");
                });

            modelBuilder.Entity("WebImovelApi.Entities.Locador", b =>
                {
                    b.Navigation("Imovels");
                });
#pragma warning restore 612, 618
        }
    }
}
